version: '3.8'

services:
  # PostgreSQL Database with PGVector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: devforge-postgres
    environment:
      POSTGRES_DB: devforge
      POSTGRES_USER: devforge
      POSTGRES_PASSWORD: devforge_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - devforge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devforge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: devforge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devforge
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Main Web Application
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    container_name: devforge-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://devforge:devforge_password@postgres:5432/devforge
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    networks:
      - devforge
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # MCP Server for AI Integration
  mcp-server:
    build:
      context: .
      dockerfile: ./docker/mcp-server/Dockerfile
    container_name: devforge-mcp
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://devforge:devforge_password@postgres:5432/devforge
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=info
    volumes:
      - ./apps/mcp-server:/app
      - /app/node_modules
      - mcp_logs:/app/logs
    networks:
      - devforge
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Real-time WebSocket Server
  realtime:
    build:
      context: .
      dockerfile: ./docker/realtime/Dockerfile
    container_name: devforge-realtime
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://devforge:devforge_password@postgres:5432/devforge
    volumes:
      - ./apps/realtime:/app
      - /app/node_modules
    networks:
      - devforge
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  # AI Service for advanced processing
  ai-service:
    build:
      context: .
      dockerfile: ./docker/ai-service/Dockerfile
    container_name: devforge-ai
    ports:
      - "8082:8082"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://devforge:devforge_password@postgres:5432/devforge
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/ai-service:/app
      - /app/node_modules
      - ai_models:/app/models
    networks:
      - devforge
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  mcp_logs:
  ai_models:

networks:
  devforge:
    driver: bridge